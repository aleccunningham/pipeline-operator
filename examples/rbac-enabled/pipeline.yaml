apiVersion: pipeline.cncd.io/v1alpha1
kind: Pipeline
metadata:
  name: project-pipeline
  labels:
    operator: pipeline-operator
spec:
  version: v2.2.0-rc.0
  serviceAccountName: pipeline-operator
  serviceMonitorSelector:
    matchExpressions:
    - {key: k8s-app, operator: Exists}
  ruleSelector:
    matchLabels:
      role: prometheus-rulefiles
      prometheus: k8s
  selector:
    app: sample-app
    group: sample-group
  sourceRepository: github.com:marjoram/pipeline.git
  dockerfile: Dockerfile.pipeline
  ssh:
    hostPath: /tmp/.ssh/id_rsa
  steps:
    - name: test
      image: golang:1.9
      commands:
        - go get ./...
        - go test
      env:
        - GOPATH=/workspace/go
      volumeMount:
        - name: test-scripts
          hostPath: /workspace/scripts
  volumes:
    - name: test-scripts
      hostPath: /workspace/scripts
  notify:
    when:
      event: ["on_success", "on_failure"]
    where:
      slack:
        channel:
          - general
          - example
        token:
          - name: slack-token
            secretFrom: /workspace/config
      email:
        from_address: technology@company.com
        to_address:
          - dev1@gmail.com
          - dev2@gmail.com
  when:
    event: ["on_commit", "on_pr"]
    branch: master
  worker:
    replicas:
      minReplicas: 1
      maxReplicas: 4
    resources:
      requests:
        cpu:
        memory:
      limits:
        cpu:
        memory:
